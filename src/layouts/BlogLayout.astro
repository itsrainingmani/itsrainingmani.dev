---
import { type CollectionEntry, getCollection } from "astro:content";
import BaseLayout from "@/layouts/BaseLayout";
import { createSlug } from "@/utils";
import Tag from "@/components/Tag";
import NavButton from "@/components/NavButton";

type Props = {
	data: (CollectionEntry<"blog"> | CollectionEntry<"clojurefam">)["data"];
	collection: (CollectionEntry<"blog"> | CollectionEntry<"clojurefam">)["collection"];
};
const {
	data: { title, description, publishDate, tags },
	collection,
} = Astro.props;

let posts = await getCollection(collection);
posts = posts
	.filter((p) => p.data.publish)
	.sort((a, b) => a.data.publishDate.valueOf() - b.data.publishDate.valueOf());
const postIndex = posts.findIndex((p) => {
	return p.data.title === title;
});
let prevPost: (CollectionEntry<"blog"> | CollectionEntry<"clojurefam">) | undefined,
	nextPost: (CollectionEntry<"blog"> | CollectionEntry<"clojurefam">) | undefined;
if (postIndex - 1 >= 0) {
	prevPost = posts[postIndex - 1];
}

if (postIndex + 1 < posts.length) {
	nextPost = posts[postIndex + 1];
}
---

<BaseLayout pageTitle={title}>
	<article class="md:proxe-xl prose max-w-none">
		<div class="not-prose blog-title">
			<h1 class="pb-0 text-2xl sm:text-3xl">{title}</h1>
			{description && <h3 class="pb-1 text-gray-500">{description}</h3>}
			{tags.sort().map((tag) => <Tag href={`/blog/tag/${createSlug(tag)}/`} content={tag} />)}
			<div class="date">
				<h4 class="sm:text-md font-mono text-sm font-light">
					{
						publishDate.toLocaleDateString("en-US", {
							year: "numeric",
							month: "short",
							day: "numeric",
						})
					}
				</h4>
			</div>
		</div>
		<hr class="not-prose my-2" />
		<slot />
		<div class="flex flex-row justify-evenly">
			{prevPost && <NavButton to={prevPost} title="Prev" />}
			{nextPost && <NavButton to={nextPost} title="Next" />}
		</div>
	</article>
</BaseLayout>
