---
import { getCollection } from "astro:content";
import BaseLayout from "@/layouts/BaseLayout";
import Action from "@/components/Action";
import Icon from "@/components/Icon";

const pageTitle = "Technical Dispatch";
const projects = (
	await getCollection("projects", ({ data }) => {
		return data.variant === "project";
	})
).sort((a, b) => b.data.createdYear - a.data.createdYear);
---

<BaseLayout>
	<div class="my-4 flex flex-col md:flex-row">
		<h1 class="basis-2/3 self-start text-left text-4xl">{pageTitle}</h1>
		<blockquote class="basis-1/3 border-l border-l-black px-3 py-1.5 italic text-gray-500">
			Systems, in one sense, are devices that take input and produce an output. A system can be
			thought to operate on the input to produce the output.
		</blockquote>
	</div>
	<hr />
	<div class="project-section grid grid-flow-row auto-rows-max grid-cols-2 gap-1 text-center">
		{
			projects.map((project) => (
				<div class="project-card flex aspect-video flex-col justify-around border border-dashed border-black p-4">
				  <div class="basis-2/3 grow-0">
            <h3 class="title">{project.data.title}</h4>
					  <p>{project.data.description}</p>
				  </div>
					<Action class="basis-1/3" location={project.data.repo}>
						<div class="flex flex-row justify-between items-center px-2">
							<Icon icon="github-logo" />
							<span class="pl-1">Repo<span>
						</div>
					</Action>
				</div>
			))
		}
	</div>
</BaseLayout>
<style>
	.project-card {
		/* box-shadow: 4px 4px var(--usuzumiiro); */
	}
</style>
