---
import { getCollection } from "astro:content";
import FormattedDate from "@/components/FormattedDate";
import BaseLayout from "@/layouts/BaseLayout";
import BlogTable from "@/components/BlogTable";

const pageTitle = "Written Archive";

const posts = (
	await getCollection("blog", ({ data }) => {
		return data.publish === true;
	})
).sort((a, b) => b.data.publishDate.valueOf() - a.data.publishDate.valueOf());

const clojureposts = (
	await getCollection("clojurefam", ({ data }) => {
		return data.publish === true;
	})
).sort((a, b) => a.data.publishDate.valueOf() - b.data.publishDate.valueOf());
---

<BaseLayout>
	<main>
		<div class="my-4 flex flex-col md:flex-row-reverse">
			<h1 class="basis-2/3 self-start text-right text-4xl">{pageTitle}</h1>
			<blockquote class="basis-1/3 border-l border-l-black px-3 py-1.5 italic text-gray-500">
				Systems, in one sense, are devices that take input and produce an output. A system can be
				thought to operate on the input to produce the output.
			</blockquote>
		</div>
		<section>
			<BlogTable>
				{
					posts.map((post) => (
						<tr>
							<td>
								<div class="py-2">
									<a href={`/blog/${post.slug}/`}>
										<h4 class="title">{post.data.title}</h4>
									</a>
									{post.data.description && (
										<small class="whitespace-break-spaces italic">{post.data.description}</small>
									)}
								</div>
							</td>
							<td>
								<FormattedDate date={post.data.publishDate} />
							</td>
						</tr>
					))
				}
			</BlogTable>
		</section>
		<section class="mb-1 mt-2">
			<span>For my writing about learning Clojure in Public, look no further:</span>
		</section>
		<section>
			<BlogTable>
				{
					clojureposts.map((post) => (
						<tr>
							<td>
								<a href={`/blog/clojurefam/${post.slug}/`}>
									<h4 class="title">{post.data.title}</h4>
								</a>
							</td>
							<td>
								<FormattedDate date={post.data.publishDate} />
							</td>
						</tr>
					))
				}
			</BlogTable>
		</section>
	</main>
</BaseLayout>
