---
import { getCollection } from "astro:content";
import BaseLayout from "@/layouts/BaseLayout";
import BlogTable from "@/components/BlogTable";
import WritingList from "@/components/WritingList";

const pageTitle = "Written Archive";

const posts = (
	await getCollection("blog", ({ data }) => {
		return data.publish === true && !data.tags.includes("ClojureFam");
	})
).sort((a, b) => b.data.publishDate.valueOf() - a.data.publishDate.valueOf());

const tags = [...new Set(posts.map((post) => post.data.tags).flat())].filter(
	(p) => p !== "ClojureFam",
);

const clojureposts = (
	await getCollection("blog", ({ data }) => {
		return data.publish === true && data.tags.includes("ClojureFam");
	})
).sort((a, b) => a.data.publishDate.valueOf() - b.data.publishDate.valueOf());
---

<BaseLayout>
	<div class="my-4 flex flex-col md:flex-row">
		<h1 class="basis-2/3 self-start text-left text-4xl">{pageTitle}</h1>
		<blockquote class="basis-1/3 border-l border-l-black px-3 py-1.5 italic text-gray-500">
			Systems, in one sense, are devices that take input and produce an output. A system can be
			thought to operate on the input to produce the output.
		</blockquote>
	</div>
	<hr />
	<p>I've written about the following topics:&nbsp;{tags.join(", ")}</p>
	<BlogTable posts={posts} />
	<p class="mb-2 mt-1">For my writing about learning Clojure in Public, look no further:</p>
	<BlogTable posts={clojureposts} />
</BaseLayout>
